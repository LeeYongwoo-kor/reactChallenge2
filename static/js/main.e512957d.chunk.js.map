{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","chartData","data","type","series","reduce","thisArray","currData","x","time_open","y","round","open","Number","EPSILON","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","title","text","align","xaxis","yaxis","tooltip","enabled","labels","formatter","value","toFixed","Container","styled","div","CoinInfoBox","CoinInfo","props","price","accentColor","isDown","Price","quotes","USD","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","ath_price","market_cap","Header","header","Footer","footer","textColor","Title","h1","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Back","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","loading","Helmet","name","rank","symbol","description","total_supply","max_supply","to","path","element","CoinsList","ul","li","bgColor","Img","img","Coins","slice","map","coin","pathname","id","src","toLowerCase","Router","basename","process","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.e512957d.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 28; // 4주전\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data: chartData } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: chartData?.reduce(\r\n                (thisArray: Array<{}>, currData: IHistorical) => {\r\n                  return [\r\n                    ...thisArray,\r\n                    {\r\n                      x: currData?.time_open,\r\n                      y: [\r\n                        Math.round((currData?.open + Number.EPSILON) * 100) /\r\n                          100,\r\n                        Math.round((currData?.high + Number.EPSILON) * 100) /\r\n                          100,\r\n                        Math.round((currData?.low + Number.EPSILON) * 100) /\r\n                          100,\r\n                        Math.round((currData?.close + Number.EPSILON) * 100) /\r\n                          100,\r\n                      ],\r\n                    },\r\n                  ];\r\n                },\r\n                []\r\n              ),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transpert\",\r\n            },\r\n            grid: {\r\n              show: true,\r\n            },\r\n            title: {\r\n              text: coinId,\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n              labels: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface PriceProps {\r\n  data: IPriceData;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst CoinInfoBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1.5fr;\r\n  margin: 25px 0px;\r\n`;\r\n\r\nconst CoinInfo = styled.div<{ isDown?: boolean; price?: number }>`\r\n  font-weight: ${(props) => props.price || 400};\r\n  padding: 10px 0px;\r\n  :nth-child(odd) {\r\n    font-size: 15px;\r\n    color: ${(props) => props.theme.accentColor};\r\n  }\r\n  > span:first-child {\r\n    display: ${(props) => (props.isDown ? \"inline-block\" : \"none\")};\r\n  }\r\n  > span:nth-child(2) {\r\n    display: ${(props) => (props.isDown ? \"none\" : \"inline-block\")};\r\n  }\r\n  > span:nth-child(3) {\r\n    color: ${(props) => (props.isDown ? \"#ff4848\" : \"#3cff00\")};\r\n  }\r\n`;\r\n\r\nfunction Price({ data }: PriceProps) {\r\n  return (\r\n    <Container>\r\n      <CoinInfoBox>\r\n        <CoinInfo>PRICE</CoinInfo>\r\n        <CoinInfo price={600}>$ {data?.quotes.USD.price.toFixed(4)}</CoinInfo>\r\n        <CoinInfo>1H</CoinInfo>\r\n        <CoinInfo isDown={data?.quotes.USD.percent_change_1h < 0}>\r\n          <span>🔻</span>\r\n          <span>💹</span>\r\n          <span>{data?.quotes.USD.percent_change_1h}%</span>\r\n        </CoinInfo>\r\n        <CoinInfo>24H</CoinInfo>\r\n        <CoinInfo isDown={data?.quotes.USD.percent_change_24h < 0}>\r\n          <span>🔻</span>\r\n          <span>💹</span>\r\n          <span>{data?.quotes.USD.percent_change_24h}%</span>\r\n        </CoinInfo>\r\n        <CoinInfo>7D</CoinInfo>\r\n        <CoinInfo isDown={data?.quotes.USD.percent_change_7d < 0}>\r\n          <span>🔻</span>\r\n          <span>💹</span>\r\n          <span> {data?.quotes.USD.percent_change_7d}%</span>\r\n        </CoinInfo>\r\n        <CoinInfo>30D</CoinInfo>\r\n        <CoinInfo isDown={data?.quotes.USD.percent_change_30d < 0}>\r\n          <span>🔻</span>\r\n          <span>💹</span>\r\n          <span>{data?.quotes.USD.percent_change_30d}%</span>\r\n        </CoinInfo>\r\n        <CoinInfo>ATH</CoinInfo>\r\n        <CoinInfo>$ {data?.quotes.USD.ath_price.toFixed(4)}</CoinInfo>\r\n        <CoinInfo>MarketCap</CoinInfo>\r\n        <CoinInfo>$ {data?.quotes.USD.market_cap}</CoinInfo>\r\n      </CoinInfoBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Route, Routes, useLocation, useMatch, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  height: 5vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  color: ${(props) => props.theme.textColor};\r\n  &:hover {\r\n    background-color: #777777;\r\n    color: black;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n  align-items: center;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  // 하나의 문단을 만들때 사용\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Back = styled.span`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  a {\r\n    display: block;\r\n    padding: 10px 0px;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface IState {\r\n  name: string;\r\n}\r\n\r\ninterface RouteState {\r\n  state: IState;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams() as RouteParams; // URL의 파라미터를 줌\r\n  const { state } = useLocation() as RouteState; // URL이 변경될때마다 새로운 location이 반환되는 useState\r\n  const priceMatch = useMatch(\"/:coinId/price\"); // 특정한 URL에 있는지의 여부를 알려준다\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 10000, // 10초마다 refetch하기(페이지 갱신)\r\n    }\r\n  );\r\n  /*   const [loading, setLoading] = useState(true);\r\n  const [info, setInfo] = useState<InfoData>();\r\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n    useEffect(() => {\r\n    (async () => {\r\n      const infoData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n      ).json(); // capsulate\r\n      const priceData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n      setInfo(infoData);\r\n      setPriceInfo(priceData);\r\n      setLoading(false);\r\n    })();\r\n  }, [coinId]); // component가 생성될 때 한번만 코드를 실행. no dependencies([])를 사용할 것! */\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(4)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Routes>\r\n            <Route\r\n              path=\"price\"\r\n              element={<Price data={tickersData as PriceData} />}\r\n            />\r\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\r\n          </Routes>\r\n          <Footer>\r\n            <Back>\r\n              <Link to={\"/\"}>⬅ Back</Link>\r\n            </Back>\r\n          </Footer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","// HOME\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins); // arg -> 1. query key, 2. fetcher function\r\n  /*   const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n      const json = await response.json();\r\n      setCoins(json.slice(0, 100));\r\n      setLoading(false);\r\n    })(); // IFFE(즉시실행함수)\r\n  }, []); // component가 시작, 종료, 변화가 일어날때. 선택할 수 있음 */\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Coins</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}/chart`,\r\n                }}\r\n                state={{ name: coin.name }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/:coinId/*\" element={<Coin />}></Route>\r\n        <Route path=\"/\" element={<Coins />}></Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport Router from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;600&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  // set\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-weight: 300;\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    line-height: 1.2;\n  }\n  a {\n    text-decoration: none;\n    color: inherit; // color를 부모로부터 가져와라!\n  }\n`;\n// from https://github.com/zacanger/styled-reset/blob/master/src/index.ts\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#353b48\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#e1b12c\",\r\n};\r\n"],"sourceRoot":""}